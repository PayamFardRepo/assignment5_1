import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
import numpy as np

#1. Read in the coupons.csv file
df = pd.read_csv('C:\Downloads\coupons.csv')

print(df.head())
print(df.info())

#2. Investigate the dataset for missing or problematic data.
rows_with_missing = df[df.isna().any(axis=1)] 
print(rows_with_missing)

#3. Deciding what to do about your missing data -- drop, replace, other...
# Car has a lot of empty cells and hence removing the Car column completely
df = df.drop('car', axis=1)
df = df.dropna() #Removing other rows with null data values

print(df.head())
print(df.info())

#4. What proportion of the total observations chose to accept the coupons?
yes_to_coupons = (df['Y'] == 1).sum()
print('Yes to coupon count ')
print(yes_to_coupons)
print('Proportion of the total observations chose to accept coupons after data cleanup')
print(yes_to_coupons / len(df))

#5. Use a bar plot to visualize the coupon column
# Count occurrences of each coupon type
coupon_counts = df['coupon'].value_counts()

# Plot the bar chart
plt.figure(figsize=(10, 5))
coupon_counts.plot(kind='bar', color='skyblue', edgecolor='black')

# Customize the chart
plt.xlabel("Coupon Type") # Add label for x axis
plt.ylabel("Count") # Add label for y axis
plt.title("Distribution of Coupon Types") # Add title for the whole plot
plt.xticks(rotation=45)  # Rotate labels for better readability

# Display the bar chart
plt.show()

#6. Use a histogram to visualize the temperature column
plt.figure(figsize=(10, 5))
plt.hist(df['temperature'], bins=10, color='skyblue', edgecolor='black')

# Customize the chart
plt.xlabel("Temperature") # Add label for x axis
plt.ylabel("Frequency") # Add label for y axis
plt.title("Distribution of Temperature") # Add title for the whole plot
plt.grid(axis='y', linestyle='--', alpha=0.7)

# Display the histogram
plt.show()

# Investiaging the Bar Coupons
#1. Create a new DataFrame that contains just the bar coupons

# Load your dataset
data = pd.read_csv("C:\Downloads\coupons.csv") 

# Query rows where the coupon column is "Bar"
bar_coupons = data[data['coupon'] == 'Bar']
bar_coupons = bar_coupons.dropna(subset=['Bar']) #Drop the null values for bar coupons

# Display the filtered DataFrame
print(bar_coupons)

#2. What proportion of bar coupons were accepted?
yes_to_coupons = (bar_coupons['Y'] == 1).sum()
print('Yes to Bar coupon count ')
print(yes_to_coupons)
print('Proportion of the bar coupons that were accepted ')
print(yes_to_coupons / len(bar_coupons))


# Find the unique values of Bar to be able to use them in 'isin' function below
unique_bar_values = data['Bar'].unique()

# Print the unique values
print(unique_bar_values)

#3. Compare the acceptance rate between those who went to a bar 3 or fewer times a month to those who went more.

bar_visits_3_times_or_fewer = bar_coupons[bar_coupons['Bar'].isin(['never', 'less1', '1~3'])].shape[0]
bar_visits_3_times_or_fewer_with_coupon_acceptance = bar_coupons[(bar_coupons['Bar'].isin(['never', 'less1', '1~3'])) & (bar_coupons['Y'] == 1)].shape[0]
print('Acceptance rate of Bar visitors with 3 or less times a month ')
print(bar_visits_3_times_or_fewer_with_coupon_acceptance / bar_visits_3_times_or_fewer)

bar_visits_more_than_3_times = bar_coupons[bar_coupons['Bar'].isin(['gt8', '4~8'])].shape[0]
bar_visits_more_than_3_times_with_coupon_acceptance = bar_coupons[(bar_coupons['Bar'].isin(['gt8', '4~8'])) & (bar_coupons['Y'] == 1)].shape[0]
print('Acceptance rate of Bar visitors with more than 3 times a month ')
print(bar_visits_more_than_3_times_with_coupon_acceptance / bar_visits_more_than_3_times)

#4. Compare the acceptance rate between drivers who go to a bar more than once a month and are over the age of 25
# to the all others. Is there a difference?

#Find all the unique ages to be able to use them in the above 25 queries below
unique_age_values = data['age'].unique()

# Print the unique values
print(unique_age_values)

bar_visitors_more_than_once_above_25 = bar_coupons[(bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8'])) 
    & (bar_coupons['age'].isin(['46', '26', '31', '41', '50plus', '36']))].shape[0]

bar_visitors_more_than_once_above_25_accepted_coupon = bar_coupons[(bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8'])) 
    & (bar_coupons['age'].isin(['46', '26', '31', '41', '50plus', '36'])) & (bar_coupons['Y'] == 1)].shape[0]
print('Bar visitors who go to bar more than once a month and are over the age of 25')
print(bar_visitors_more_than_once_above_25_accepted_coupon)

print('Acceptance rate of bar visitors above 25 years of age who go to bar more than once a month')
print(bar_visitors_more_than_once_above_25_accepted_coupon/bar_visitors_more_than_once_above_25)

bar_visitors_more_than_once = bar_coupons[bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8'])].shape[0]

print('Drivers going to bar more than once a month')
print(bar_visitors_more_than_once)

bar_visitors_more_than_once_accepted_coupon = bar_coupons[(bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8'])) 
    & (bar_coupons['Y'] == 1)].shape[0]

print('Acceptance rate of bar visitors who go to bar more than once a month')
print(bar_visitors_more_than_once_accepted_coupon/bar_visitors_more_than_once)

# The acceptance rates of drivers going to a bar more than once regardless of whether they are over 25 or not are negligible
print('The difference between acceptance rates of drivers going to a bar more than once regardless of whether they are over 25 or not are negligible (i.e. less than 2%)')

# 5. Use the same process to compare the acceptance rate between drivers who go to bars more than once a month
#    and had passengers that were not a kid and had occupations other than farming, fishing, or forestry.

#Find all the unique passengers to be able to find the drivers with kids in the queries below
unique_passenger_values = data['passanger'].unique()

# Print the unique values
print(unique_passenger_values)

#Find all the unique occupations to be able to use them in the queries below
unique_occupation_values = data['occupation'].unique()

# Print the unique values
print(unique_occupation_values)

bar_visitors_more_than_once_no_kid_passengers_not_farming_fishing_forestry = bar_coupons[bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8']) 
    & (~bar_coupons['passanger'].isin(['Kid(s)'])) & (~bar_coupons['occupation'].isin(['Farming Fishing & Forestry']))].shape[0]

print('Drivers going to bar more than once a month and had passengers that were not a kid and had occupations other than farming, fishing, and forestry')
print(bar_visitors_more_than_once_no_kid_passengers_not_farming_fishing_forestry)

bar_visitors_more_than_once_no_kid_passengers_not_farming_fishing_forestry_accepted_coupon = bar_coupons[bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8']) 
    & (~bar_coupons['passanger'].isin(['Kid(s)'])) & (~bar_coupons['occupation'].isin(['Farming Fishing & Forestry'])) & (bar_coupons['Y'] == 1)].shape[0]

print('Acceptance rate of drivers going to bar more than once a month and had passengers that were not a kid and had occupations other than farming, fishing, and forestry')
print(bar_visitors_more_than_once_no_kid_passengers_not_farming_fishing_forestry_accepted_coupon/
      bar_visitors_more_than_once_no_kid_passengers_not_farming_fishing_forestry)

print('Acceptance rate of drivers who go to bar more than once a month with passengers that were not kid and not having the occupation of farming, fshing, and forestry is higher than the total population of drivers who go to bar more than once')

# 6. Compare the acceptance rates between those drivers who:
# . Go to bars more than once a month, had passengers that were not a kid, and were not windowed OR
# . go to bars more than once a month and are under the age of 30 OR
# . go to cheap restaurants more than 4 times a month and income is less than 50K.

# . Drivers who go to bars more than once a month, had passengers that were not a kid, and were not windowed
bar_visitors_more_than_once_no_kid_passengers_not_windowed = bar_coupons[bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8']) 
    & (~bar_coupons['passanger'].isin(['Kid(s)'])) & (~bar_coupons['maritalStatus'].isin(['Widowed']))].shape[0]

print('Bar visitors, more than once, no kids, and not windowed')
print(bar_visitors_more_than_once_no_kid_passengers_not_windowed)

bar_visitors_more_than_once_no_kid_passengers_not_windowed_accepted_coupon = bar_coupons[bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8']) 
    & (~bar_coupons['passanger'].isin(['Kid(s)'])) & (~bar_coupons['maritalStatus'].isin(['Widowed'])) & (bar_coupons['Y'] == 1)].shape[0]

print('Bar visitors, more than once, no kids, not windowed, and accepted coupons')
print(bar_visitors_more_than_once_no_kid_passengers_not_windowed_accepted_coupon)

print('Acceptance rates of drivers, more than once, no kids, and not windowed')
print(bar_visitors_more_than_once_no_kid_passengers_not_windowed_accepted_coupon/bar_visitors_more_than_once_no_kid_passengers_not_windowed)

# . Drivers who go to bars more than once a month and are under the age of 30
bar_visitors_more_than_once_under_age_30 = bar_coupons[bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8']) 
    & (~bar_coupons['maritalStatus'].isin(['Widowed'])) & (bar_coupons['age'].isin(['21', '26', 'below21']))].shape[0]

print('Bar visitors, more than once and under age of 30')
print(bar_visitors_more_than_once_under_age_30)

bar_visitors_more_than_once_under_age_30_accepted_coupon = bar_coupons[bar_coupons['Bar'].isin(['1~3', 'gt8', '4~8']) 
    & (~bar_coupons['maritalStatus'].isin(['Widowed'])) & (bar_coupons['age'].isin(['21', '26', 'below21'])) & (bar_coupons['Y'] == 1)].shape[0]

print('Bar visitors, more than once and under age of 30 who accepted coupon')
print(bar_visitors_more_than_once_under_age_30_accepted_coupon)

print('Acceptance rates of drivers, more than once under the age of 30')
print(bar_visitors_more_than_once_under_age_30_accepted_coupon/bar_visitors_more_than_once_under_age_30)

# . Drivers who go to cheap restaurants more than 4 times a month and income is less than 50K

#Find all the unique restaurants under 20 to be used in the queries below
unique_restaurant_under_20_values = data['RestaurantLessThan20'].unique()

# Print the unique values
print(unique_restaurant_under_20_values)

#Find all the unique income levels to be used in the queries below
unique_income_values = data['income'].unique()

# Print the unique values
print(unique_income_values)

bar_visitors_cheap_restaurants_more_than_4_times_income_less_than_50K = bar_coupons[bar_coupons['RestaurantLessThan20'].isin(['4~8', 'gt8']) 
    & (bar_coupons['income'].isin(['Less than $12500', '$12500 - $24999', '$25000 - $37499', '$37500 - $49999']))].shape[0]

print('Bar visitors going to cheap restaurants more than 4 times a months with income level less than 50K')
print(bar_visitors_cheap_restaurants_more_than_4_times_income_less_than_50K)

bar_visitors_cheap_restaurants_more_than_4_times_income_less_than_50K_coupon_accepted = bar_coupons[bar_coupons['RestaurantLessThan20'].isin(['4~8', 'gt8']) 
    & (bar_coupons['income'].isin(['Less than $12500', '$12500 - $24999', '$25000 - $37499', '$37500 - $49999'])) 
    & (bar_coupons['Y'] == 1)].shape[0]

print('Bar visitors going to cheap restaurants more than 4 times a month with income level less than 50K and accepted coupons')
print(bar_visitors_cheap_restaurants_more_than_4_times_income_less_than_50K_coupon_accepted)

print('Acceptance rates of drivers visiting cheap restaurants more than 4 times a month with income level less than 50K')
print(bar_visitors_cheap_restaurants_more_than_4_times_income_less_than_50K_coupon_accepted/
      bar_visitors_cheap_restaurants_more_than_4_times_income_less_than_50K)

# 7. Based on these observations, what do you hypothesize about drivers who accepted the bar coupons

# Drivers who accepted the bar coupons have the following characteristics:
#  . They have income levels more than 50K
#  . They are mainly under the age of 30
#  . They do not have kids in their cars
#  . They are not windowed
#  . They do not frequently go to cheap restaurants
print('Drivers who accepted the bar coupons have: income levels more than 50K, mainly under the age of 30, do not have kids in their cars, they are not widowed, and do not frequently go to cheap restaurants')

# Independent Investigation

#Find all the unique weather values to be able to use them in the queries below
unique_weather_values = data['weather'].unique()

# Print the unique values
print(unique_weather_values)

#Find all the unique temperature values to be able to use them in the queries below
unique_temperature_values = data['temperature'].unique()

# Print the unique values
print(unique_temperature_values)

bar_visitors_sunny = bar_coupons[(bar_coupons['weather'].isin(['Sunny']))
    & (bar_coupons['Y'] == 1)].shape[0]

print('bar_visitors_sunny')
print(bar_visitors_sunny)

bar_visitors_rainy = bar_coupons[(bar_coupons['weather'].isin(['Rainy']))
    & (bar_coupons['Y'] == 1)].shape[0]

print('bar_visitors_rainy')
print(bar_visitors_rainy)

bar_visitors_snowy = bar_coupons[(bar_coupons['weather'].isin(['Snowy']))
    & (bar_coupons['Y'] == 1)].shape[0]

print('bar_visitors_snowy')
print(bar_visitors_snowy)

bar_coupons['temperature'] = pd.to_numeric(bar_coupons['temperature'])

bar_visitors_temperature_80 = bar_coupons[(bar_coupons['temperature'] == 80)
    & (bar_coupons['Y'] == 1)].shape[0]

print('bar_visitors_temperature_80')
print(bar_visitors_temperature_80)

bar_visitors_temperature_55 = bar_coupons[(bar_coupons['temperature'] == 55)
    & (bar_coupons['Y'] == 1)].shape[0]

print('bar_visitors_temperature_55')
print(bar_visitors_temperature_55)

bar_visitors_temperature_30 = bar_coupons[(bar_coupons['temperature'] == 30)
    & (bar_coupons['Y'] == 1)].shape[0]

print('bar_visitors_temperature_30')
print(bar_visitors_temperature_30)


# Based on the above findings on temperature and weather

# . Weather seems to have significant effect on whether coupon is accepted or not. As you can see snowy days have significantly less acceptance (i.e. 76)
#   rainy has more but significantly less than sunny days (i.e. 156) and sunny has the most number of acceptance (i.e. 587)
#  . Temperature seems to have impacts also on acceptance. When the weather is not too hot or too cold, acceptance has been highest (i.e. on temperature of 55, 425 acceptance)
#    Too cold has the least acceptance (i.e. temperature of 30 has only 138 acceptance) and too hot has much more than too cold but much less than 
#    comfortable temperature (i.e. on temperature 80, 256 acceptance)


